@using SevenSpikes.Nop.Plugins.SmartProductCollections.Models.Public

@model ProductCollectionsModel

@{
    Html.AddCssFileParts("~/Plugins/SevenSpikes.Nop.Plugins.SmartProductCollections/Themes/" + Model.Theme + "/Content/SmartProductCollections.css");

    var supportRtlClass = string.Empty;

    var supportRtl = ShouldUseRtlTheme();
    if (supportRtl)
    {
        Html.AddCssFileParts("~/Plugins/SevenSpikes.Nop.Plugins.SmartProductCollections/Themes/" + Model.Theme + "/Content/SmartProductCollections.rtl.css");

        supportRtlClass = "support-rtl";
    }

    Html.AddScriptParts("~/Plugins/SevenSpikes.Nop.Plugins.SmartProductCollections/Scripts/Products.min.js");
}

@foreach (var group in Model.ProductGroups)
{
    <div class="spc spc-products @supportRtlClass"
         notloaded
         data-getitemproductsurl="@Url.Action("GetProductsForItem", "SmartProductCollections")">
        <div class="spc-header">
            <div class="title"><strong>@group.Title</strong></div>
            <ul class="navigation">
                @foreach (var item in group.Items)
                {
                    <li class="tab" data-tabid="@item.Id">
                        <span>@item.Title</span>
                    </li>
                }
            </ul>
        </div>
        <div class="spc-body">
            @foreach (var item in group.Items)
            {
                <div class="product-grid" data-tabid="@item.Id">
                    <div class="item-grid"></div>
                </div>
            }
            <div class="loading-overlay">
                <span>@T("SevenSpikes.SmartProductCollections.Public.Loading")</span>
            </div>
        </div>
    </div>
}